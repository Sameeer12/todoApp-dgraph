{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/sgupta/projects/myTodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import gql from\"graphql-tag\";export var GET_TODOS=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query {\\n    queryTask {\\n      id\\n      title\\n      completed\\n    }\\n  }\\n\"])));export var ADD_TODO=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  mutation addTask($task: [AddTaskInput!]!) {\\n    addTask(input: $task) {\\n      task {\\n        id\\n        title\\n      }\\n    }\\n  }\\n\"])));export var TOGGLE_TODO=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  mutation updateTask($taskID: ID!, $completed: Boolean!) {\\n    updateTask(input: {\\n      filter: { id: [$taskID] },\\n      set: {\\n        completed: $completed\\n      }\\n    }) {\\n      task {\\n        id\\n        title\\n        completed\\n      }\\n    }\\n  }\\n\"])));export var TOGGLE_ALL_TODO=gql(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  mutation updateTask($completed: Boolean!) {\\n    updateTask(input: {\\n      filter: {},\\n      set: {\\n        completed: $completed\\n      }\\n    }) {\\n      task {\\n        id\\n        title\\n        completed\\n      }\\n    }\\n  }\\n\"])));export var DELETE_TODO=gql(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  mutation deleteTask($taskID: [ID!]) {\\n    deleteTask(filter: { id: $taskID }) {\\n      msg\\n    }\\n  }\\n\"])));export var UPDATE_TODO=gql(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  mutation updateTask($taskID: ID!, $task: TaskPatch!) {\\n    updateTask(input: {\\n      filter: { id: [$taskID] },\\n      set: $task\\n    }) {\\n      task {\\n        id\\n        title\\n        completed\\n      }\\n    }\\n  }\\n\"])));export var CLEAR_COMPLETED_TODO=gql(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  mutation deleteTask($completed: Boolean) {\\n    deleteTask(filter: { completed: $completed }) {\\n      msg\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/home/sgupta/projects/myTodoApp/gitfiles/todoApp-dgraph/src/GraphQLData.js"],"names":["gql","GET_TODOS","ADD_TODO","TOGGLE_TODO","TOGGLE_ALL_TODO","DELETE_TODO","UPDATE_TODO","CLEAR_COMPLETED_TODO"],"mappings":"gSAAA,MAAOA,CAAAA,GAAP,KAAgB,aAAhB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGD,GAAH,mJAAf,CAUP,MAAO,IAAME,CAAAA,QAAQ,CAAGF,GAAH,+MAAd,CAWP,MAAO,IAAMG,CAAAA,WAAW,CAAGH,GAAH,8UAAjB,CAiBP,MAAO,IAAMI,CAAAA,eAAe,CAAGJ,GAAH,iTAArB,CAiBP,MAAO,IAAMK,CAAAA,WAAW,CAAGL,GAAH,gLAAjB,CAQP,MAAO,IAAMM,CAAAA,WAAW,CAAGN,GAAH,uSAAjB,CAeP,MAAO,IAAMO,CAAAA,oBAAoB,CAAGP,GAAH,+LAA1B","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const GET_TODOS = gql`\n  query {\n    queryTask {\n      id\n      title\n      completed\n    }\n  }\n`;\n\nexport const ADD_TODO = gql`\n  mutation addTask($task: [AddTaskInput!]!) {\n    addTask(input: $task) {\n      task {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const TOGGLE_TODO = gql`\n  mutation updateTask($taskID: ID!, $completed: Boolean!) {\n    updateTask(input: {\n      filter: { id: [$taskID] },\n      set: {\n        completed: $completed\n      }\n    }) {\n      task {\n        id\n        title\n        completed\n      }\n    }\n  }\n`;\n\nexport const TOGGLE_ALL_TODO = gql`\n  mutation updateTask($completed: Boolean!) {\n    updateTask(input: {\n      filter: {},\n      set: {\n        completed: $completed\n      }\n    }) {\n      task {\n        id\n        title\n        completed\n      }\n    }\n  }\n`;\n\nexport const DELETE_TODO = gql`\n  mutation deleteTask($taskID: [ID!]) {\n    deleteTask(filter: { id: $taskID }) {\n      msg\n    }\n  }\n`;\n\nexport const UPDATE_TODO = gql`\n  mutation updateTask($taskID: ID!, $task: TaskPatch!) {\n    updateTask(input: {\n      filter: { id: [$taskID] },\n      set: $task\n    }) {\n      task {\n        id\n        title\n        completed\n      }\n    }\n  }\n`;\n\nexport const CLEAR_COMPLETED_TODO = gql`\n  mutation deleteTask($completed: Boolean) {\n    deleteTask(filter: { completed: $completed }) {\n      msg\n    }\n  }\n`;"]},"metadata":{},"sourceType":"module"}