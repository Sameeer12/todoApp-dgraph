{"ast":null,"code":"import _slicedToArray from\"/home/sgupta/projects/myTodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ESCAPE_KEY=27;var ENTER_KEY=13;var TodoItem=function TodoItem(props){var _useState=useState(props.todo.title),_useState2=_slicedToArray(_useState,2),editText=_useState2[0],setEditText=_useState2[1];var editField=React.useRef(null);useEffect(function(){if(!editField.current&&props.editing){var node=editField.current;node.focus();node.setSelectionRange(node.value.length,node.value.length);}});var handleSubmit=function handleSubmit(event){var onDestroy=props.onDestroy,onSave=props.onSave;var val=editText.trim();if(val){onSave(val);setEditText(val);}else{onDestroy();}};var handleEdit=function handleEdit(){var onEdit=props.onEdit,todo=props.todo;onEdit();setEditText(todo.title);};var handleKeyDown=function handleKeyDown(event){var onCancel=props.onCancel,todo=props.todo;if(event.which===ESCAPE_KEY){setEditText(todo.title);onCancel(event);}else if(event.which===ENTER_KEY){handleSubmit(event);}};var handleChange=function handleChange(event){if(props.editing){setEditText(event.target.value);}};var editing=props.editing,onDestroy=props.onDestroy,onToggle=props.onToggle,todo=props.todo;return/*#__PURE__*/_jsxs(\"li\",{className:classNames({completed:todo.completed,editing:editing}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"view\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"toggle\",type:\"checkbox\",checked:todo.completed,onChange:onToggle}),/*#__PURE__*/_jsx(\"label\",{onDoubleClick:handleEdit,children:todo.title}),/*#__PURE__*/_jsx(\"button\",{className:\"destroy\",onClick:onDestroy})]}),/*#__PURE__*/_jsx(\"input\",{ref:editField,className:\"edit\",value:editText,onChange:handleChange,onKeyDown:handleKeyDown})]});};export default TodoItem;","map":{"version":3,"sources":["/home/sgupta/projects/myTodoApp/gitfiles/todoApp-dgraph/src/TodoItem.js"],"names":["React","useState","useEffect","classNames","ESCAPE_KEY","ENTER_KEY","TodoItem","props","todo","title","editText","setEditText","editField","useRef","current","editing","node","focus","setSelectionRange","value","length","handleSubmit","event","onDestroy","onSave","val","trim","handleEdit","onEdit","handleKeyDown","onCancel","which","handleChange","target","onToggle","completed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport classNames from 'classnames'\n\nconst ESCAPE_KEY = 27\nconst ENTER_KEY = 13\n\nconst TodoItem = (props) => {\n  const [editText, setEditText] = useState(props.todo.title);\n  const editField = React.useRef(null)\n\n  useEffect(() => {\n    if (!editField.current && props.editing) {\n      const node = editField.current\n      node.focus()\n      node.setSelectionRange(node.value.length, node.value.length)\n    }\n  })\n\n  const handleSubmit = event => {\n    const {onDestroy, onSave } = props\n    var val = editText.trim()\n    if (val) {\n      onSave(val)\n      setEditText(val)\n    } else {\n      onDestroy()\n    }\n  }\n\n  const handleEdit = () => {\n    const { onEdit, todo } = props\n    onEdit()\n    setEditText(todo.title)\n  }\n\n  const handleKeyDown = event => {\n    const { onCancel, todo } = props\n    if (event.which === ESCAPE_KEY) {\n      setEditText(todo.title)\n      onCancel(event)\n    } else if (event.which === ENTER_KEY) {\n      handleSubmit(event)\n    }\n  }\n\n  const handleChange = event => {\n    if (props.editing) {\n      setEditText(event.target.value)\n    }\n  }\n\n  const { editing, onDestroy, onToggle, todo } = props\n  return (\n    <li className={classNames({\n      completed: todo.completed,\n      editing: editing,\n    })}>\n      <div className=\"view\">\n        <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={onToggle}\n        />\n        <label onDoubleClick={handleEdit}>\n            {todo.title}\n        </label>\n        <button className=\"destroy\" onClick={onDestroy} />\n      </div>\n      <input\n        ref={editField}\n        className=\"edit\"\n        value={editText}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </li>\n  )\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}